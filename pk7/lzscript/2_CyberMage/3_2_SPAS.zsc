// Distributed under the CC0 public domain license.
// By Alison Sanderson. Attribution is encouraged, though not required.
// See licenses/cc0.txt for more information.

class Lith_VoidShotTrail : Actor
{
   default
   {
      Alpha 0.9;
      RenderStyle "Add";
      Scale 0.05;
      Translation "Lith_VoidShot";

      +BRIGHT
      +NOINTERACTION
   }

   states
   {
   Spawn:
      BLLT N 0;
   SpawnLoop:
      #### # 0 A_JumpIf(scale.x < 0.005, "Death");
      #### # 1 ;
      #### # 0 A_SetScale(scale.x * 0.9);
      loop;
   Death:
      TNT1 A 0;
      stop;
   }
}

class Lith_VoidShotTrail2 : Lith_VoidShotTrail
{
   default
   {
      Scale 0.025;
      Translation "None";
   }

   states {Spawn: BLLT L 0; goto SpawnLoop;}
}

class Lith_VoidShotTrail3 : Lith_VoidShotTrail {default {Scale 0.15;}}
class Lith_VoidShotEffect : Lith_MonsterSoulEffect {default {Translation "Lith_VoidShot";}}

class Lith_VoidShot : Actor
{
   default
   {
      Alpha 0.9;
      Damage 5;
      Height 4;
      Radius 4;
      RenderStyle "Add";
      Scale 0.05;
      Speed 16;
      Translation "Lith_VoidShot";

      Projectile;
      +BRIGHT
      +SEEKERMISSILE
   }

   states
   {
   Spawn:
      BLLT N 0;
      BLLT N 0 {
         A_SpawnItemEx("Lith_VoidShotTrail");
         A_SpawnItemEx("Lith_VoidShotTrail2");
         if(Random(0, 1))
            A_SpawnItemEx("Lith_VoidShotTrail3");
      }
      BLLT N 0 A_Jump(256, 1, 2, 3, 3);
      BLLT N 0 A_ChangeVelocity(0,FRandom(-1,1),FRandom(-1,1), CVF_RELATIVE);
      BLLT N 0 A_SeekerMissile(5, 1, SMF_LOOK|SMF_PRECISE|SMF_CURSPEED);
      BLLT N 1;
      loop;
   Death:
      BLLT N 0 {
         A_PlaySound("ghost/hit", CHAN_5);
         for(int i = 0; i < 12; i++)
            A_SpawnItemEx("Lith_VoidShotEffect", 0,0,0, FRandom(-2,2),FRandom(-2,2),FRandom(-2,2));
      }
      stop;
   }
}

class Lith_SPAS : Lith_CWeapon;

default
{
   Lith_Weapon.MagSize 8;
   Tag "Shotgun";
   Weapon.SlotNumber 3;
   Weapon.SlotPriority 0.95;
   Weapon.UpSound "weapons/cshotgun/draw";

   +WEAPON.NOAUTOFIRE
}

states(Actor)
{
SpawnPickup:
   TNT1 A 0 Lith_A_SpawnPickup("Lith_SuperShotgunPickup");
   stop;
}

states(Weapon)
{
Ready:
   CSHG A 1 Lith_A_Ready(WRF_ALLOWRELOAD);
   loop;

Deselect:
   CSHG AA 0 A_Lower;
   CSHG A 1 A_Lower;
   loop;

Select:
   CSHG AA 0 A_Raise;
   CSHG A 1 A_Raise;
   loop;

Fire:
   CSHG A 0 A_JumpIf(CountInv("Lith_ShellAmmo") == 0, "FireEmpty");
   CSHG A 0 Lith_A_JumpIfMagEmpty;
   CSHG A 0 {
      A_TakeInventory("Lith_ShellAmmo", 1, TIF_NOTAKEINFINITE);
      Lith_A_Casing("Lith_CasShellHot", 30, 6, 20, FRandom(3,4), FRandom(7,8), FRandom(7,9));
      if(!ACS_ExecuteWithResult(lsc_pdata, pdata_upgrade, UPGR_SPAS_B))
         Lith_A_MagIncr();
      // don't ask
      if(Pos.Z - FloorZ >= 24)
      {
         A_Recoil(15);
         Lith_FireBullets(10.5, 3.5, 3, 3);
      }
      A_AlertMonsters();
      A_Recoil(0.7);
      Lith_A_RecoilUp(0.4);
   }
   CSHG A 0 A_JumpIf(ACS_ExecuteWithResult(lsc_pdata, pdata_upgrade, UPGR_SPAS_A), "FireVoid");
   CSHG A 0 {
      Lith_FireBullets(10.5, 3.5, 12, 6);
      Lith_A_GunSmoke();
	  A_FireProjectile("Lith_LightProjectileRedLong", 0, 0, 0, 0, 0, 0);
   }
   CSHG A 0 A_JumpIf(ACS_ExecuteWithResult(lsc_pdata, pdata_upgrade, UPGR_SPAS_B), "FireAuto");
   CSHG B 1 bright offset(0, 35) {A_Light(1); A_PlaySound("weapons/cshotgun/fire", CHAN_WEAPON);}
   CSHG B 1 bright offset(0, 35);
   CSHG C 1 bright offset(0, 34) {A_Light(2); Lith_A_RecoilDn(0.2);}
   CSHG C 1 bright offset(0, 33);
   CSHG D 1 offset(0, 33) {A_Light(0); Lith_A_RecoilDn(0.2);}
   CSHG D 1 offset(0, 32);
   goto ReadySelector;
FireVoid:
   CSHG B 1 bright offset(0, 38) {
      A_Light(1);
      for(int i = 0; i < 6; i++)
         A_FireProjectile("Lith_VoidShot", FRandom(-5,5), false, 0, 0, FPF_NOAUTOAIM, -FRandom(-2,2));
      A_PlaySound("weapons/cshotgun/fire", CHAN_WEAPON);
   }
   CSHG B 1 bright offset(0, 38);
   CSHG C 1 bright offset(0, 37) {
      A_Light(2);
      Lith_A_RecoilDn(0.2);
   }
   CSHG D 1 bright offset(0, 36);
   CSHG D 1 offset(0, 35) A_Light(0);
   CSHG A 1 offset(0, 35) Lith_A_RecoilDn(0.2);
   CSHG A 1 offset(0, 33);
   CSHG A 1 offset(0, 32);
   goto ReadySelector;
FireAuto:
   CSHG B 1 bright offset(0, 38) {
      A_Light(1);
      Lith_FireBullets(11, 5, 2, 2);
      Lith_A_GunSmoke();
      A_PlaySound("weapons/cshotgun/fire2", CHAN_WEAPON);
   }
   CSHG B 1 bright offset(0, 38);
   CSHG C 1 bright offset(0, 37);
   CSHG C 1 bright offset(0, 37) {A_Light(2); Lith_A_RecoilDn(0.2);}
   CSHG D 1 bright offset(0, 36);
   CSHG D 1 bright offset(0, 36);
   CSHG D 1 offset(0, 35) A_Light(0);
   CSHG A 1 offset(0, 35) Lith_A_RecoilDn(0.2);
   CSHG A 1 offset(0, 34);
   CSHG A 1 offset(0, 33);
   CSHG A 1 offset(0, 32);
   goto ReadySelector;

FireEmpty:
   CSHG A 1;
   CSHG A 2 offset(0, 38);
   CSHG A 1 offset(0, 40);
   CSHG A 1 offset(0, 37) A_PlaySound("weapons/cshotgun/empty", CHAN_5);
   CSHG A 1 offset(0, 34);
   CSHG A 1 offset(0, 33);
   CSHG A 5 offset(0, 32);
   goto ReadySelector;

Reload:
   CSHG A 0 A_JumpIf(ACS_ExecuteWithResult(lsc_pdata, pdata_upgrade, UPGR_SPAS_B), "Ready");
   CSHG A 0 Lith_A_JumpIfMagFull;
   CSHR ABCDE 1;
   CSHR FG 2;
   CSHR H 2 A_PlaySound("weapons/cshotgun/load", CHAN_6);
   CSHR IJKLMNOPQR 2;
   CSHR S 2 {
      A_PlaySound("weapons/cshotgun/pump", CHAN_7);
      Lith_A_ReloadFinish();
      Lith_A_ReloadBobDn(1.5);
   }
   CSHR TUVWXYZB 2;
   goto ReadySelector;
}

// EOF
