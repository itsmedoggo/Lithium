// Distributed under the CC0 public domain license.
// By Alison Sanderson. Attribution is encouraged, though not required.
// See licenses/cc0.txt for more information.

class Lith_ShockRifleMagazine : Lith_DroppedMagazine
{
   default
   {
      Mass 150;
      Scale 0.7;
   }

   states
   {
   Spawn1:
      MGZE ABCD 3 {user_side = 0;}
      MGZE EFGH 3 {user_side = 1;}
      loop;
   Death:
      MGZE C 0 A_JumpIf(user_side == 0, "Done");
      MGZE G 0 A_JumpIf(user_side == 1, "Done");
      stop;
   }
}

class Lith_ShockRifleMagazine2 : Lith_ShockRifleMagazine
{
   default
   {
      BounceSound "weapons/magbouncef";
      Mass 155;
   }

   states
   {
   Spawn1:
      MGZE IJKL 3 {user_side = 0;}
      MGZE MNOP 3 {user_side = 1;}
      loop;
   Death:
      MGZE K 0 A_JumpIf(user_side == 0, "Done");
      MGZE O 0 A_JumpIf(user_side == 1, "Done");
      stop;
   }
}

class Lith_ShockFX : Actor
{
   default
   {
      Alpha 0.5;
      RenderStyle "AddStencil";
      StencilColor "LightBlue";

      +BRIGHT
      +NOINTERACTION
   }

   states
   {
   Spawn:
      #### # 1;
      #### # 1 A_FadeOut;
      wait;
   }
}

class Lith_ShockEnemyGiver : CustomInventory
{
   default
   {
      +FORCEPAIN
      +INVENTORY.ALWAYSPICKUP
   }

   states
   {
   Pickup:
      TNT1 A 0 {
         A_DamageSelf(5, "Electric", 0, "None", src: AAPTR_TARGET);
         A_SpawnItemEx("Lith_ShockFX", flags: SXF_NOCHECKPOSITION|SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE);
      }
      stop;
   }
}

class Lith_ShockEffectPuff : Lith_Dummy
{
   default
   {
      DamageType "Electric";
      Species "Lith_Player";

      +DONTHARMSPECIES
   }
}

class Lith_ShockEffect : Actor
{
   default
   {
      Alpha 0.7;
      RenderStyle "Add";
      Scale 0.6;

      +BRIGHT
      +NOINTERACTION
      +RANDOMIZE
   }

   states
   {
   Spawn:
      ZAP1 FEDCBA 1;
      stop;
   }
}

class Lith_ShockEffect2 : Lith_ShockEffect
{
   default
   {
      +FRIENDLY
      +NOBLOCKMAP
      +NOGRAVITY
      -NOINTERACTION
   }

   states
   {
   Spawn:
      ZAP1 FEFEFEDCBCBABA 2 A_CustomRailgun(5, 0, "", "White", RGF_SILENT|RGF_NOPIERCING|RGF_EXPLICITANGLE|RGF_FULLBRIGHT|RGF_CENTERZ, 0, 10, "Lith_ShockEffectPuff", FRandom(0, 360), FRandom(0, 360), FRandom(100,200), 10, 0.2, 0);
      stop;
   }
}

class Lith_SuperShockEffect : Actor
{
   default
   {
      Alpha 0.7;
      RenderStyle "Add";
      Scale 0.6;
      Translation "Lith_SuperShockEffect";

      +BRIGHT
      +NOINTERACTION
   }

   states
   {
   Spawn:
      SDXP IJKLMNOPQRS 1;
      SDXP S 1 A_FadeOut(0.2);
      wait;
   }
}

class Lith_ShockHitCount : Inventory {default {Inventory.MaxAmount 6;}}

class Lith_ShockPuff : Lith_BulletPuff
{
   default
   {
      +FORCEPAIN
      +HITTRACER
      +PUFFGETSOWNER
      +PUFFONACTORS
   }

   states
   {
   Crash:
      TNT1 A 0;
      TNT1 A 0 {
         A_PlaySound("weapons/erifle/zap");
         A_SpawnItemEx("Lith_ShockEffect");
      }
      TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(lsc_pdata, pdata_upgrade, UPGR_ShockRif_A, true), "Charged");
      goto Super::Spawn;
   Melee:
   Spawn:
      TNT1 A 0;
      TNT1 A 0 {
         A_PlaySound("weapons/erifle/zap");
         A_SpawnItemEx("Lith_ShockEffect");
      }
      TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(lsc_pdata, pdata_upgrade, UPGR_ShockRif_B, true), "Binding");
      TNT1 A 0 A_GiveInventory("Lith_ShockEnemyGiver", 1, AAPTR_TRACER);
      TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(lsc_pdata, pdata_upgrade, UPGR_ShockRif_A, true), "Charged");
      stop;
   Charged:
      TNT1 A 0 A_SpawnItemEx("Lith_ShockEffect2", flags: SXF_TRANSFERPOINTERS|SXF_NOCHECKPOSITION);
      stop;
   Binding:
      TNT1 A 0 A_GiveInventory("Lith_ShockHitCount", 1, AAPTR_TRACER);
      TNT1 A 0 A_JumpIfInventory("Lith_ShockHitCount", 0, "Explode", AAPTR_TRACER);
      TNT1 AAA 3 A_GiveInventory("Lith_ShockEnemyGiver", 1, AAPTR_TRACER);
      stop;
   Explode:
      TNT1 A 0 {
         A_TakeInventory("Lith_ShockHitCount", 999, 0, AAPTR_TRACER);
         A_SpawnItemEx("Lith_SuperShockEffect");
         A_PlaySound("weapons/erifle/shock");
         A_Explode(64, 512, 0);
      }
      TNT1 AAAAA 3 A_GiveInventory("Lith_ShockEnemyGiver", 1, AAPTR_TRACER);
      stop;
   }
}

class Lith_ShockRifle : Lith_CWeapon;

default
{
   Tag "Shock Rifle";
   Weapon.UpSound "weapons/erifle/draw";
   Weapon.SlotNumber 3;
   Weapon.SlotPriority 1;
   Lith_Weapon.MagSize 7;

   +WEAPON.NOAUTOFIRE
}

states(Actor)
{
SpawnPickup:
   TNT1 A 0 Lith_A_SpawnPickup("Lith_ShotgunPickup");
   stop;
}

states(Weapon)
{
Ready:
   CSRG A 1 Lith_A_Ready(WRF_ALLOWRELOAD);
   loop;

Deselect:
   CSRG AA 0 A_Lower;
   CSRG A 1 A_Lower;
   loop;

Select:
   CSRG AA 0 A_Raise;
   CSRG A 1 A_Raise;
   loop;

Fire:
   CSRG A 0 Lith_A_JumpIfNoSlot3OptAmmo;
   CSRG A 0 Lith_A_JumpIfMagEmpty;
   CSRG A 1 {
      Lith_A_MagIncr();
      Lith_A_TakeSlot3OptAmmo();
   }
   CSRG B 1 bright offset(0, 40) {
      A_Light(1);
      Lith_A_RecoilUp(0.5);
      A_Recoil(0.1);
      A_GunFlash("DummyFlash");
      A_PlaySound("weapons/erifle/fire", CHAN_WEAPON);
      Lith_FireBullets(1, 0, -1, 37*FRandom(1,1.5), FBF_NORANDOM, "Lith_ShockPuff");
	  A_FireProjectile("Lith_LightProjectileRedShort", 0, 0, 0, 0, 0, 0);
      Lith_A_GunSmokeSmall();
   }
   CSRG C 1 bright offset(0, 35) {A_Light(0); Lith_A_RecoilDn(0.25);}
   CSRG A 1 offset(0, 34) Lith_A_RecoilDn(0.25);
   CSRG A 2 offset(0, 33);
   goto ReadySelector;

Reload:
   CSRG A 0 Lith_A_JumpIfMagFull;
   CSRG D 1 offset(1, 32);
   CSRG E 1 offset(3, 32);
   CSRG F 1 offset(4, 32);
   CSRG F 1 offset(8, 38);
   CSRG F 1 offset(12, 45);
   CSRG F 1 offset(16, 53) Lith_A_ReloadBobDn(0.1);
   CSRG F 1 offset(19, 60) Lith_A_ReloadBobDn(0.1);
   CSRG F 1 offset(21, 64) {
      Lith_A_ReloadBobDn(0.1);
      A_PlaySound("weapons/erifle/reloadout", CHAN_6);
   }
   CSRG F 1 offset(23, 67) {
      Lith_A_DropMag("Lith_ShockRifleMagazine", "Lith_ShockRifleMagazine2", 8,-1,20, FRandom(0,1),FRandom(1,3),0);
      Lith_A_ReloadBobDn(0.1);
   }
   CSRG F 1 offset(22, 69) Lith_A_ReloadBobDn(0.1);
   CSRG F 1 offset(19, 70) Lith_A_ReloadBobDn(0.1);
   CSRG F 7 offset(18, 72) Lith_A_ReloadBobDn(0.3);
   CSRG F 1 offset(17, 69);
   CSRG F 1 offset(19, 67);
   CSRG F 1 offset(20, 66);
   CSRG F 1 offset(21, 62);
   CSRG E 1 offset(20, 60);
   CSRG D 1 offset(21, 63) {
      A_PlaySound("weapons/erifle/reloadin", CHAN_7);
      Lith_A_ReloadFinish();
      Lith_A_ReloadBobUp(0.1);
   }
   CSRG A 1 offset(23, 66) Lith_A_ReloadBobUp(0.1);
   CSRG A 1 offset(24, 68) Lith_A_ReloadBobUp(0.1);
   CSRG A 1 offset(25, 63) Lith_A_ReloadBobUp(0.1);
   CSRG A 1 offset(24, 59) Lith_A_ReloadBobUp(0.4);
   CSRG A 1 offset(22, 57);
   CSRG A 1 offset(20, 54);
   CSRG A 1 offset(16, 49);
   CSRG A 1 offset(12, 44);
   CSRG A 1 offset(10, 42);
   CSRG A 1 offset(8, 40);
   CSRG A 1 offset(5, 38);
   CSRG A 1 offset(2, 35);
   goto ReadySelector;

FireEmpty:
   #### # 1;
   #### # 2 offset(0, 41);
   #### # 1 offset(0, 45);
   #### # 1 offset(0, 43);
   #### # 1 offset(0, 40) A_PlaySound("weapons/ionrifle/empty", CHAN_5);
   #### # 1 offset(0, 38);
   #### # 1 offset(0, 36);
   #### # 1 offset(0, 33);
   #### # 1 offset(0, 32);
   #### # 5;
   #### #### 1 A_ReFire;
   goto ReadySelector;
}

// EOF
