// Distributed under the CC0 public domain license.
// By Alison Sanderson. Attribution is encouraged, though not required.
// See licenses/cc0.txt for more information.

class Lith_StarShrapnel : Actor
{
   default
   {
      DamageFunction 10;
      Height 2;
      Mass 0;
      Radius 2;
      RenderStyle "Add";
      Scale 0.7;
      Speed 32;

      Projectile;
      +NODAMAGETHRUST
   }

   states
   {
   Spawn:
      BLLT M 4 bright;
      loop;
   Death:
      MICX A 1 bright {
         A_PlaySound("weapons/dark/impact", CHAN_BODY, .3);
         Scale = (.5, .5);
      }
      MICX BCDEFG 1 bright;
      stop;
   }
}

class Lith_StarShrapnelHoming : Lith_StarShrapnel
{
   default
   {
      DamageFunction 30;
      Scale 1.4;
      Translation "Lith_StarShrapnelHoming";
   }

   states
   {
   Spawn:
      BLLT M 4 bright A_SeekerMissile(45, 360, SMF_LOOK);
      loop;
   }
}

class Lith_StarWoosh1 : Actor
{
   default
   {
      Height 8;
      Radius 8;
      RenderStyle "Add";
      Scale 0.7;

      +NOINTERACTION
   }

   states
   {
   Death:
   Spawn:
      BLLT L 0;
      BLLT L 0 bright A_JumpIf(Scale.X < 0.01, "Null");
      BLLT L 2 bright A_SetScale(Scale.X*FRandom(0.9,1.0));
      loop;
   }
}

class Lith_StarWoosh2 : Lith_StarWoosh1
{
   states
   {
   Spawn:
      BLLT L 0;
      BLLT L 0 bright A_SetScale(Scale.X*FRandom(0.95,1.0));
      BLLT L 1 bright A_FadeOut(0.05);
      loop;
   }
}

class Lith_StarProjectile : Actor
{
   default
   {
      Damage 20;
      Speed 2;
      Scale 0.15;
      Radius 8;
      Height 8;
      Mass 500;
      RenderStyle "Add";

      Projectile;
      +FORCERADIUSDMG
      +RIPPER
      +SEEKERMISSILE
   }

   int m_SoundTimer;
   int m_RushTimer;
   int m_HomingShrapnelTimer;

   states
   {
   Spawn:
      TNT1 A 4;
      TNT1 A 0 {
         A_PlaySound("weapons/dark/wind", CHAN_7, 1.0, true);
         target.master = invoker;
         A_SpawnProjectile("Lith_StarDestroyerRainbowProjectile1", 0, 0, 0, 0, 0, 0);
         A_SpawnProjectile("Lith_StarDestroyerRainbowProjectile2", 0, 0, 0, 0, 0, 0);
         A_SpawnProjectile("Lith_StarDestroyerRainbowProjectile3", 0, 0, 0, 0, 0, 0);
      }
   Spawn1:
      BLLT L 0 bright {m_RushTimer++; A_AlertMonsters();}
      BLLT L 0 bright A_JumpIf(m_RushTimer > 35*7, "Rush");
      BLLT L 0 bright A_JumpIf(Scale.X < 0.7, "ScaleUp");
   SoundCheck:
      BLLT L 0 bright {m_HomingShrapnelTimer++;}
      BLLT L 0 bright A_JumpIf(m_HomingShrapnelTimer >= 10, "DoHomingMissile");
   SoundCheck1:
      BLLT L 0 bright {m_SoundTimer--;}
      BLLT L 0 bright A_JumpIf(m_SoundTimer > 0, "DoMissile");
      BLLT L 0 bright {m_SoundTimer = 3; A_PlaySound("weapons/dark/fire", CHAN_5);}
   DoMissile:
      BLLT L 0 bright {
         A_Explode(40, 8 + 45 * Scale.X, 0);
         for(int i = 0; i < 5; i++)
            A_SpawnProjectile("Lith_StarShrapnel", CallACS("Lith_CircleSpread", 45*Scale.X*FIX, 45*Scale.X*FIX, false)/FIX, CallACS("Lith_CircleSpread", 45*Scale.X*FIX, 45*Scale.X*FIX, true)/FIX, 0, CMF_TRACKOWNER|CMF_AIMDIRECTION|CMF_BADPITCH);
      }
      goto DoSeek;
   DoHomingMissile:
      BLLT L 0 bright {
         m_HomingShrapnelTimer = 0;
         for(int i = 0; i < 2; i++)
            A_SpawnProjectile("Lith_StarShrapnelHoming", CallACS("Lith_CircleSpread", 45*Scale.X*FIX, 45*Scale.X*FIX, false)/FIX, CallACS("Lith_CircleSpread", 45*Scale.X*FIX, 45*Scale.X*FIX, true)/FIX, 0, CMF_TRACKOWNER|CMF_AIMDIRECTION|CMF_BADPITCH);
      }
      goto SoundCheck1;
   ScaleUp:
      BLLT L 0 bright A_SetScale(Scale.X * 1.01);
      goto SoundCheck;
   DoSeek:
      BLLT L 0 bright A_SeekerMissile(0, 1, SMF_LOOK);
      goto DoWoosh;
   Rush:
      BLLT L 0 bright {
         bRIPPER = false;
         A_ChangeVelocity(Vel.X*1.1, Vel.Y*1.1, Vel.Z*1.1, CVF_REPLACE);
      }
   DoWoosh:
      BLLT L 1 bright {
         A_SpawnItemEx("Lith_StarWoosh1", 0,0,0, 4,0,0, 180, SXF_TRANSFERSCALE|SXF_NOCHECKPOSITION);
         A_SpawnItemEx("Lith_StarWoosh2", 0,0,0, 3,0,0, 180, SXF_TRANSFERSCALE|SXF_NOCHECKPOSITION);
         A_Quake(1, 2, 0, 512);
         A_Quake(3, 2, 0, 256);
         A_Quake(5, 2, 0, 64);
         A_RadiusGive("Lith_BlindingLight1", 256, RGF_PLAYERS);
         A_RadiusGive("Lith_BlindingLight2", 128, RGF_PLAYERS);
         A_RadiusGive("Lith_BlindingLight3", 64,  RGF_PLAYERS);
      }
      goto Spawn1;
   Death:
      SDXP A 1 bright {
         A_Explode(128, 512, 0);
         A_StopSound(CHAN_7);
         A_PlaySound("weapons/shipgun/explode", CHAN_6);
         Scale = (1, 1);
         A_RadiusGive("Lith_BlindingLight3", 512, RGF_PLAYERS);
      }
      SDXP BCDEFGHIJKLMNOPQRS 1 bright;
      SDXP T 1 bright A_FadeOut;
      wait;
   }
}

class Lith_SolspearThingy : Actor
{
   default
   {
      RenderStyle "Add";
      Scale 0.15;

      +BRIGHT
      +NOCLIP
      +NOGRAVITY
   }

   states
   {
   Spawn:
      BLLT L 0;
      BLLT L 5 A_Explode(128, 128, 0);
      BLLT L 1 A_FadeOut(0.025);
      wait;
   }
}

class Lith_Solspear : Actor
{
   default
   {
      BounceCount 15;
      BounceFactor 1;
      BounceSound "weapons/dark/fire";
      BounceType "Hexen";
      Damage 500;
      Height 8;
      Radius 8;
      RenderStyle "Add";
      Scale 0.15;
      Speed 48;
      WallBounceFactor 1;

      Projectile;
      +BRIGHT
      +RIPPER
   }

   const FLAGS = SXF_TRANSFERPOINTERS|SXF_NOCHECKPOSITION;

   states
   {
   Spawn:
      BLLT L 1;
      BLLT L 0 {
         target.master = invoker;
         A_SpawnProjectile("Lith_StarDestroyerRainbowProjectile1", 0, 0, 0, 0, 0, 0);
         A_SpawnProjectile("Lith_StarDestroyerRainbowProjectile2", 0, 0, 0, 0, 0, 0);
         A_SpawnProjectile("Lith_StarDestroyerRainbowProjectile3", 0, 0, 0, 0, 0, 0);
      }
   Spawn1:
      BLLT L 0;
      BLLT L 1 {
         A_SpawnItemEx("Lith_SolspearThingy",  -8, flags: FLAGS);
         A_SpawnItemEx("Lith_SolspearThingy", -16, flags: FLAGS);
         A_SpawnItemEx("Lith_SolspearThingy", -24, flags: FLAGS);
         A_SpawnItemEx("Lith_SolspearThingy", -32, flags: FLAGS);
         A_SpawnItemEx("Lith_SolspearThingy", -40, flags: FLAGS);
         A_SpawnItemEx("Lith_SolspearThingy", -48, flags: FLAGS);
      }
      loop;
   }
}

class Lith_StarBarrier : Actor
{
   default
   {
      Alpha 0.8;
      RenderStyle "Add";
      Translation "Lith_StarBarrier";
      XScale 0.3;
      YScale 0.4;

      +NOINTERACTION
      +NOTIMEFREEZE
   }

   states
   {
   Spawn:
      LBAR A 0;
      LBAR A 1 A_ScaleVelocity(FRandom(0.5,1));
   SpawnLoop:
      LBAR A 1 A_FadeOut(FRandom(0.04, 0.09));
      loop;
   }
}

class Lith_SurgeProtector : Powerup
{
   default
   {
      Powerup.Duration 3;
   }

   override void ModifyDamage(int damage, name damageType, out int newdamage, bool passive)
      {newdamage = damage / 4;}
}

class Lith_SurgeOfDestiny : Lith_CustomFunction
{
   const FLAGS = SXF_NOCHECKPOSITION;

   states
   {
   Pickup:
      TNT1 A 0 {
         A_GiveInventory("Lith_SurgeProtector");
         A_Explode(128, 192, 0);
         A_PlaySound("weapons/dark/fire", CHAN_7);
         A_SpawnItemEx("Lith_StarBarrier", 24,0,32, 2,0,2,  50, FLAGS);
         A_SpawnItemEx("Lith_StarBarrier", 24,0,32, 2,0,2,  90, FLAGS);
         A_SpawnItemEx("Lith_StarBarrier", 24,0,32, 2,0,2, 135, FLAGS);
         A_SpawnItemEx("Lith_StarBarrier", 24,0,32, 2,0,2, 180, FLAGS);
         A_SpawnItemEx("Lith_StarBarrier", 24,0,32, 2,0,2, 225, FLAGS);
         A_SpawnItemEx("Lith_StarBarrier", 24,0,32, 2,0,2, 270, FLAGS);
         A_SpawnItemEx("Lith_StarBarrier", 24,0,32, 2,0,2, 310, FLAGS);
         for(int i = 0; i < 9; i++)
            A_FireProjectile("Lith_StarShrapnel", FRandom(0, 360), false, 0, 32, FPF_AIMATANGLE|FPF_NOAUTOAIM);
         for(int i = 0; i < 3; i++)
            A_FireProjectile("Lith_StarShrapnelHoming", FRandom(0, 360), false, 0, 32, FPF_AIMATANGLE|FPF_NOAUTOAIM);
      }
      stop;
   }
}

class Lith_StarDestroyer : Lith_CWeapon;

default
{
   Tag "Star Destroyer";
   Weapon.BobRangeX 1.7;
   Weapon.BobSpeed 0.7;
   Weapon.SlotNumber 7;
   Weapon.SlotPriority 1;
   Weapon.UpSound "weapons/shipgun/draw";

   +WEAPON.NOAUTOFIRE
}

action(Weapon) void Lith_A_FireStar()
{
   A_GunFlash("DummyFlash");
   if(ACS_ExecuteWithResult(lsc_pdata, pdata_upgrade, UPGR_ShipGun_A))
   {
      A_PlaySound("weapons/shipgun/firesol", CHAN_5);
      A_FireProjectile("Lith_Solspear");
   }
   else if(ACS_ExecuteWithResult(lsc_pdata, pdata_upgrade, UPGR_ShipGun_B))
   {
      A_PlaySound("weapons/shipgun/firesurge", CHAN_5);
      CallACS("Lith_SurgeOfDestiny");
      A_FireProjectile("Lith_SurgeRainbowProjectile1", 0, 0, 0, 0, 0, 0);
      A_FireProjectile("Lith_SurgeRainbowProjectile2", 0, 0, 0, 0, 0, 0);
      A_FireProjectile("Lith_SurgeRainbowProjectile3", 0, 0, 0, 0, 0, 0);
   }
   else
   {
      A_PlaySound("weapons/shipgun/fire", CHAN_5);
      A_FireProjectile("Lith_StarProjectile");
   }
}

states(Actor)
{
SpawnPickup:
   TNT1 A 0 Lith_A_SpawnPickup("Lith_BFG9000Pickup");
   stop;
}

states(Weapon)
{
Ready:
   SDSG AABBCCDDEEFFGGHH 1 Lith_A_Ready;
   loop;

Deselect:
   SDSG A 0 A_StopSound(CHAN_6);
DeselectLoop:
   SDSG AA 0 A_Lower;
   SDSG A 1 A_Lower;
   loop;

Select:
   SDSG A 0 A_PlaySound("weapons/shipgun/idle", CHAN_6, 1, true);
SelectLoop:
   SDSG A 0 A_Raise;
   SDSG A 1 A_Raise;
   loop;

Fire:
   SDSG A 0 A_JumpIf(CountInv("Lith_CannonAmmo") < 5, "FireEmpty");
   SDSG A 1 A_PlaySound("weapons/shipgun/prepare", CHAN_WEAPON);
   SDSG ABCDEFFGGH 1 bright;
   SDSG HAABCDEFGH 1 bright;
   SDSG ABBCCDDEFG 1 bright offset(0, 33);
   SDSG HADEFHBCGH 1 bright offset(0, 34);
   SDSG A 1 bright {
      A_TakeInventory("Lith_CannonAmmo", 5, TIF_NOTAKEINFINITE);
      A_AlertMonsters();
   }
   SDSG A 1 bright offset(-1, 33);
   SDSG A 1 bright offset(-1, 34);
   SDSG A 1 bright offset(-1, 36);
   SDSG A 2 bright offset(1, 37);
   SDSF A 3 bright offset(1, 38);
   SDSF B 2 bright offset(0, 62) Lith_A_FireStar;
   SDSF C 1 bright offset(0, 57);
   SDSF D 1 bright offset(0, 47);
   SDSF E 1 bright offset(0, 44);
   SDSF F 1 bright offset(0, 40);
   SDSF G 1 bright offset(0, 37);
   SDSF H 1 bright offset(0, 35);
   SDSG AABBCCDDEEFFGGHH 1 offset(0, 32) A_ReFire;
   goto ReadySelector;
FireEmpty:
   SDSG A 2 A_PlaySound("weapons/shipgun/empty", CHAN_7);
   SDSG B 1 offset(0, 28);
   SDSG C 1 offset(0, 29);
   SDSG D 1 offset(0, 32);
   SDSG E 1 offset(0, 35);
   SDSG F 1 offset(0, 40);
   SDSG G 1 offset(0, 42);
   SDSG H 1 offset(0, 43);
   SDSG A 1 offset(0, 44);
   SDSG B 1 offset(0, 40);
   SDSG C 1 offset(0, 37);
   SDSG D 1 offset(0, 34);
   SDSG EFG 1 offset(0, 32);
   SDSG H 1 A_ReFire;
   goto ReadySelector;
}

// EOF
