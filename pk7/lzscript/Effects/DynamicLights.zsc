// Distributed under the CC0 public domain license.
// By itsmedoggo. Attribution is encouraged, though not required.
// See licenses/cc0.txt for more information.

class Lith_LightProjectileRedShort : Actor
{
   default
   {
      Damage 0;
      Radius 0;
      Speed  0;
      Height 0;

      Projectile;
      +DONTSPLASH
      +DROPOFF
      +NOBLOCKMAP
      +NOINTERACTION
      +NOTIMEFREEZE
      +THRUACTORS
   }

   int m_Counter;
   
   states
   {
   Spawn:
      TNT1 A 1 {
         A_Warp(AAPTR_TARGET, 0, 0, 40, 0, WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE);
         m_Counter++;
      }
      TNT1 A 0 A_JumpIf(m_Counter >= 2, "Death");
      loop;
   Death:
      TNT1 A 0;
      stop;
   }
}

class Lith_LightProjectileRedLong : Lith_LightProjectileRedShort
{
   states
   {
   Spawn:
      TNT1 A 1 {
         A_Warp(AAPTR_TARGET, 0, 0, 40, 0, WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE);
         m_Counter++;
      }
      TNT1 A 0 A_JumpIf(m_Counter >= 4, "Death");
      loop;
   Death:
      TNT1 A 0;
      stop;
   }
}

class Lith_LightProjectileSkyLong : Lith_LightProjectileRedLong {}

class Lith_LightProjectileGreenShort : Lith_LightProjectileRedShort {}

class Lith_LightProjectileGreenLong : Lith_LightProjectileRedLong {}

class Lith_StarDestroyerRainbowProjectile1 : Lith_LightProjectileRedShort
{
   states
   {
   Spawn:
      TNT1 A 1 nodelay {
         Target = Target.Master;
      }
      goto Spawn1;
   Derp:
      TNT1 A 1;
   Spawn1:
      TNT1 A 1 {
         if(Target)
         {
            Warp(Target, flags: WARPF_INTERPOLATE);
            return ResolveState("Derp");
         }
         else
            return ResolveState("Death");
      }
      loop;
   Death:
      TNT1 A 1;
      stop;
   }
}

class Lith_StarDestroyerRainbowProjectile2 : Lith_StarDestroyerRainbowProjectile1 {}

class Lith_StarDestroyerRainbowProjectile3 : Lith_StarDestroyerRainbowProjectile1 {}

class Lith_SurgeRainbowProjectile1 : Lith_LightProjectileRedShort
{
   states
   {
   Spawn:
      TNT1 A 1 {
         A_Warp(AAPTR_TARGET, 0, 0, 40, 0, WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE);
         m_Counter++;
      }
      TNT1 A 0 A_JumpIf(m_Counter >= 245, "Death");
      loop;
   Death:
      TNT1 A 0;
      stop;
   }
}

class Lith_SurgeRainbowProjectile2 : Lith_SurgeRainbowProjectile1 {}

class Lith_SurgeRainbowProjectile3 : Lith_SurgeRainbowProjectile1 {}

class Lith_BladeLightProjectile : Lith_LightProjectileRedShort
{
   states
   {
   Spawn:
      TNT1 A 1 {
         A_Warp(AAPTR_TARGET, 0, 0, 40, 0, WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE);
         m_Counter++;
      }
      TNT1 A 0 A_JumpIf(m_Counter >= 8, "Death");
      loop;
   Death:
      TNT1 A 0;
      stop;
   }
}

// EOF
